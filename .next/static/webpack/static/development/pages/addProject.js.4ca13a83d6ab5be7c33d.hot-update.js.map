{"version":3,"file":"static/webpack/static/development/pages/addProject.js.4ca13a83d6ab5be7c33d.hot-update.js","sources":["webpack:///./pages/addProject.js"],"sourcesContent":["import React from 'react';\nimport Select from 'react-select';\nimport Layout from '../Components/twoColumnLayout'\nimport axios from 'axios';\nimport Config from '../config';\nimport Link from 'next/link';\nimport category from '../Services/categoryService';\nimport business from '../Services/businessService';\nimport ReactTags from 'react-tag-autocomplete'\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            token: '',\n            businessName: '',\n            businessDescription: '',\n            addressLine1: '',\n            addressCity: '',\n            addressState: '',\n            addressPincode: '',\n            categoryType: 'Select Category Type',\n            category: 'Select Category',\n            subCategory: 'Select Sub Category',\n            businessContactNumbers: '',\n            businessTags: '',\n            categoryList: '',\n            subCategoryList: '',\n            subCategoryArray: [],\n            errors: {},\n            success: '',\n            error: '',\n            // new vars\n            categoryArray: [],\n            selectedOption: null,\n            subCategoryArray: [],\n            selectedSubOption: null,\n            businessCategory: [],\n            tags: [],\n            suggestions: []\n\n            // tags: [\n            //     { id: 1, name: \"Apples\" },\n            //     { id: 2, name: \"Pears\" }\n            // ],\n            // suggestions: [\n            //     { id: 3, name: \"Bananas\" },\n            //     { id: 4, name: \"Mangos\" },\n            //     { id: 5, name: \"Lemons\" },\n            //     { id: 6, name: \"Apricots\" }\n            // ]\n        };\n    }\n\n    componentDidMount = () => {\n        if (localStorage.getItem('token') !== null) {\n            console.log('Data Available');\n            this.setState({ token: localStorage.getItem('token') }, function() {\n                console.log(this.state.token)\n            });\n        }\n        category.getMainCategories().then(res => {\n            let a = [];\n            res.data.forEach(function(item) {\n                a.push({ value: item.path, label: item.name });\n            });\n            this.setState({ categoryArray: a }, function() {\n                console.log(this.state.categoryArray);\n            });\n        }).catch(error => {\n            console.log('error 8', error)\n        });\n    }\n    handleDelete(i) {\n        const tags = this.state.tags.slice(0)\n        tags.splice(i, 1)\n        this.setState({ tags })\n    }\n\n    handleAddition(tag) {\n        const tags = [].concat(this.state.tags, tag)\n        this.setState({ tags },function(){\n             console.log(this.state.tags)\n        })\n\n\n    }\n\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n    getAllskills = (query) => {\n        console.log(query)\n        axios.get(Config.url + '/api/business/getallskills?p=' + query).then(res => {\n            var cata = res.data.data;\n\n            const arr = cata;\n\n            const newResponse = arr.map((name, id) => ({ id, name }));\n            console.log(newResponse);\n            this.setState({ suggestions: newResponse })\n            //this.setState({ categories: cata });\n            //console.log(this.state.categories)\n        }).catch(error => {\n            return error;\n        });\n    }\n    handleCategoryChange = selectedOption => {\n        this.setState({ selectedOption }, function() {\n            category.getSubCategories(this.state.selectedOption.value).then(res => {\n                let a = [];\n                res.data.forEach(function(item) {\n                    a.push({ value: item.path, label: item.name });\n                });\n                this.setState({ subCategoryArray: a }, function() {\n                    console.log(this.state.subCategoryArray);\n                });\n            }).catch(error => {\n                console.log('error 8', error)\n            });\n        });\n    }\n    handleSubCategoryChange = selectedOption => {\n        this.setState({ selectedSubOption: selectedOption });\n    }\n    addBusiness = () => {\n        let cat = this.state.selectedOption;\n        let subCat = this.state.selectedSubOption;\n        let businessCategory = []\n        subCat.push(cat);\n        subCat.forEach(function(item) {\n            businessCategory.push(item.value);\n        });\n        this.setState({ businessCategory: businessCategory }, function() {\n            business.addBusiness({\n                'businessName': this.state.businessName,\n                'businessDescription': this.state.businessDescription,\n                'addressLine1': this.state.addressLine1,\n                'addressCity': this.state.addressCity,\n                'addressState': this.state.addressState,\n                'addressPincode': this.state.addressPincode,\n                'businessContactNumbers': this.state.businessContactNumbers,\n                'addressArea': this.state.addressArea,\n                'businessCategory': this.state.businessCategory,\n                'businessTags': this.state.businessTags\n            }, {\n                headers: {\n                    'x-access-token': this.state.token\n                }\n            }\n            ).then(res => {\n                console.log('res3', res);\n            }).catch(err => {\n                console.log('err3', err);\n            });\n        });\n    }\n    render() {\n\n        return (<Layout>\n            <div className=\"page-content\">\n                <div className=\"inner-box\">\n                    <div className=\"dashboard-box d-sm-flex align-items-center justify-content-between \">\n                        <h2 className=\"dashbord-title\">Add new project</h2>\n                        {/* <Link href=\"addBusiness\"><a data-toggle=\"modal\"  className=\"d-none d-sm-inline-block btn btn-sm btn-common shadow-sm\"><i className=\"lni-plus\" /> Create</a></Link> */}\n                    </div>\n                    <div className=\"dashboard-wrapper\" id=\"shopDetails\"></div>\n                    <div className=\"col-md-12 col-sm-12 col-sx-12\">\n                        <div className=\"form-group mb-3\">\n                            <label className=\"control-label\">What is your project about?*</label>\n                            <input className=\"form-control input-md\" name=\"businessName\" value={this.state.businessName} type=\"text\" onChange={this.handleChange} />\n                            <p><font color=\"red\">{this.state.errors.businessName}</font></p>\n                        </div>\n                        <div className=\"form-group mb-3\">\n                            <label className=\"control-label\">Address Line 1 *</label>\n                            <ReactTags\n                                handleInputChange={this.getAllskills}\n                                minQueryLength={1}\n                                tags={this.state.tags}\n                                suggestions={this.state.suggestions}\n                                handleDelete={this.handleDelete.bind(this)}\n                                handleAddition={this.handleAddition.bind(this)} />\n                        </div>\n                        <div className=\"form-group mb-3\">\n                            <label className=\"control-label\">Address Area *</label>\n                            <input className=\"form-control input-md\" name=\"addressarea\" value={this.state.addressarea} type=\"text\" onChange={this.handleChange} />\n                            <p><font color=\"red\">{this.state.errors.addressarea}</font></p>\n                        </div>\n                        <div className=\"form-group mb-3\">\n                            <label className=\"control-label\">Address City *</label>\n                            <input className=\"form-control input-md\" name=\"addressCity\" value={this.state.addressCity} type=\"text\" onChange={this.handleChange} />\n                            <p><font color=\"red\">{this.state.errors.addressCity}</font></p>\n                        </div>\n                        <div className=\"form-group mb-3\">\n                            <label className=\"control-label\">Address State*</label>\n                            <input className=\"form-control input-md\" name=\"addressState\" value={this.state.addressState} type=\"text\" onChange={this.handleChange} />\n                            <p><font color=\"red\">{this.state.errors.addressState}</font></p>\n                        </div>\n                        <div className=\"form-group mb-3\">\n                            <label className=\"control-label\">Pincode *</label>\n                            <input className=\"form-control input-md\" name=\"addressPincode\" value={this.state.addressPincode} type=\"text\" onChange={this.handleChange} />\n                            <p><font color=\"red\">{this.state.errors.addressPincode}</font></p>\n                        </div>\n                        <div className=\"form-group mb-3\">\n                            <label className=\"control-label\">Contact Number *</label>\n                            <input className=\"form-control input-md\" name=\"businessContactNumbers\" value={this.state.businessContactNumbers} type=\"text\" onChange={this.handleChange} />\n                            <p><font color=\"red\">{this.state.errors.businessContactNumbers}</font></p>\n                        </div>\n                        <div className=\"form-group mb-3\">\n                            <label className=\"control-label\">Select Category:</label>\n                            <Select onChange={this.handleCategoryChange} options={this.state.categoryArray} />\n                        </div>\n                        <div className=\"form-group mb-3\">\n                            <label className=\"control-label\">Select Sub Category:</label>\n                            <Select value={this.state.selectedSubOption} isMulti onChange={(...args) => this.handleSubCategoryChange(...args)} options={this.state.subCategoryArray} />\n                        </div>\n                        <div className=\"form-group mb-3\">\n                            <label className=\"control-label\">Business Tags*</label>\n                            <input className=\"form-control input-md\" name=\"businessTags\" value={this.state.businessTags} type=\"text\" onChange={this.handleChange} />\n                            <p><font color=\"red\">{this.state.errors.businessTags}</font></p>\n                        </div>\n\n\n                        {/* <div className=\"form-group mb-3\">\n                        <label className=\"control-label\">Shop Photograph</label>\n                        <label className=\"tg-fileuploadlabel\" htmlFor=\"tg-photogallery\">\n                        <span>Drop files anywhere to upload</span>\n                        <span>Or</span>\n                        <span className=\"btn btn-common\">Select Files</span>\n                        <span>Maximum upload file size: 500 KB</span>\n                        <input id=\"tg-photogallery\" className=\"tg-fileinput\" type=\"file\" name=\"file\" />\n                        </label>\n                    </div> */}\n                        {this.state.success !== '' ? <div className=\"alert alert-success\">\n                            {this.state.success}\n                        </div> : ''}\n                        {this.state.error ? <div className=\"alert alert-danger\">\n                            {this.state.error}\n                        </div> : ''}\n                        <button className=\"btn btn-common\" type=\"button\" onClick={this.addBusiness}>Submit</button>\n                        <button className=\"btn btn-common\" type=\"button\" onClick={this.onCanel}>Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </Layout>);\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAEA;AAAA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA4CA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9DA;AA8EA;AACA;AACA;AAhFA;AAiFA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAhGA;AAiGA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/GA;AAgHA;AAAA;AAAA;AACA;AACA;AAlHA;AAmHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AADA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAhJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AAFA;AAyCA;AACA;;;AAoBA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAGA;;;AAucA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA3OA;AACA;;;;;A","sourceRoot":""}