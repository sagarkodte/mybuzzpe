{"version":3,"file":"static/webpack/static/development/pages/editBusiness.js.974ee3cb5f7f765b48ae.hot-update.js","sources":["webpack:///./pages/editBusiness.js"],"sourcesContent":["import React from 'react';\nimport Select from 'react-select';\nimport Layout from '../Components/twoColumnLayout'\nimport axios from 'axios';\nimport Config from '../config';\nimport Link from 'next/link';\nimport category from '../Services/categoryService';\nimport business from '../Services/businessService';\nimport { toast, ToastContainer } from 'react-toastify';\nimport Router from 'next/router'\nimport Loader from '../Components/Loader';\n\n\n\n\n\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n            // new vars\n            categoryArray: [],\n            selectedOption: null,\n            subCategoryArray: [],\n            selectedSubOption: null,\n            selectedSubOptionDefault: [],\n            businessCategory: [],\n            file: null,\n            showUploadFile: false,\n            projectID: '',\n            errors: {},\n            uploadError: ''\n        };\n    }\n\n    componentDidMount = () => {\n        if (localStorage.getItem('token') !== null) {\n            console.log('Data Available');\n            this.setState({ token: localStorage.getItem('token') }, function() {\n                console.log(this.state.token)\n            });\n        }\n        this.businessDetails();\n        category.getMainCategories().then(res => {\n            let a = [];\n            res.data.forEach(function(item) {\n                a.push({ value: item.path, label: item.name });\n            });\n            this.setState({ categoryArray: a });\n        }).catch(error => {\n            console.log('error 8', error)\n        });\n    }\n\n    businessDetails = () => {\n        if (this.props.url.query.path !== '') {\n            var data = {\n                \"businessId\": this.props.url.query.path,\n                \"comment\": \"Hello test\",\n                \"rating\": 3\n            }\n            axios.post(Config.url + '/api/business/singlelist', data, {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }).then(res => {\n                console.log('categories of 2 :', res.data.data);\n                this.setState({ businessDetails: res.data.data }, function() {\n                    this.setState({businessName:this.state.businessDetails.businessName})\n                    this.setState({addressLine1:this.state.businessDetails.addressLine1})\n                    this.setState({addressArea:this.state.businessDetails.addressArea})\n                    this.setState({addressCity:this.state.businessDetails.addressCity})\n                    this.setState({addressState:this.state.businessDetails.addressState})\n                    this.setState({addressPincode:this.state.businessDetails.addressPincode})\n                    this.setState({businessContactNumbers:this.state.businessDetails.businessContactNumbers})\n                    this.setState({businessTags:this.state.businessDetails.businessTags})\n                    this.setState({businessDescription:this.state.businessDetails.businessDescription});\n                    let self = this;\n                    let selectedSubOption = [];\n                    this.state.businessDetails.businessCategory.forEach(function(index){\n                      if(index.split('/').length == 2) {\n                        self.setState({ selectedOption: {value: index}}, function(){\n                          self.handleCategoryChange(this.state.selectedOption);\n                        });\n                      } else {\n                        selectedSubOption.push(index);\n                      }\n                    });\n                    this.setState({selectedSubOptionDefault: selectedSubOption});\n                });\n\n\n            }).catch(error => {\n                // return error;\n\n            });\n        }\n    }\n\n\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n    handleCategoryChange = selectedOption => {\n        this.setState({ selectedOption }, function() {\n            category.getSubCategories(this.state.selectedOption.value).then(res => {\n                let a = [], b = [], self = this;\n                res.data.forEach(function(item) {\n                  if(self.state.selectedSubOptionDefault.includes(item.path)) {\n                    b.push({value: item.path, label: item.name});\n                  }\n                  a.push({ value: item.path, label: item.name });\n                });\n                this.setState({ subCategoryArray: a });\n                if(b) {\n                  this.setState({ selectedSubOption: b });\n                }\n            }).catch(error => {\n                console.log('error 8', error)\n            });\n        });\n    }\n    handleSubCategoryChange = selectedOption => {\n        this.setState({ selectedSubOption: selectedOption });\n    }\n    handleValidation = () => {\n        let errors = {};\n        if (!this.state.businessName) errors.businessName = 'This field is required';\n        if (!this.state.addressLine1) errors.addressLine1 = 'This field is required';\n        if (!this.state.addressArea) errors.addressArea = 'This field is required';\n        if (!this.state.addressCity) errors.addressCity = 'This field is required';\n        if (!this.state.addressState) errors.addressState = 'This field is required';\n        if (!this.state.businessContactNumbers) errors.businessContactNumbers = 'This field is required';\n        if (!this.state.addressPincode) errors.addressPincode = 'This field is required';\n        if (!this.state.selectedOption) errors.selectedOption = 'This field is required';\n        if (!this.state.selectedSubOption) errors.selectedSubOption = 'This field is required';\n        if (!this.state.businessTags) errors.businessTags = 'This field is required';\n        if (!this.state.businessDescription) errors.businessDescription = 'This field is required';\n        if (Object.entries(errors).length > 0) {\n            this.setState({ errors });\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    addBusiness = () => {\n        if (this.handleValidation()) {\n            let cat = this.state.selectedOption;\n            let subCat = this.state.selectedSubOption;\n            let businessCategory = []\n            subCat.push(cat);\n            subCat.forEach(function(item) {\n                businessCategory.push(item.value);\n            });\n            this.setState({ businessCategory: businessCategory }, function() {\n                business.addBusiness({\n                    'businessName': this.state.businessName,\n                    'businessDescription': this.state.businessDescription,\n                    'addressLine1': this.state.addressLine1,\n                    'addressArea': this.state.addressArea,\n                    'addressCity': this.state.addressCity,\n                    'addressState': this.state.addressState,\n                    'addressPincode': this.state.addressPincode,\n                    'businessContactNumbers': this.state.businessContactNumbers,\n                    'businessCategory': (this.state.businessCategory).toString(),\n                    'businessTags': this.state.businessTags\n                }, {\n                    headers: {\n                        'x-access-token': this.state.token\n                    }\n                }\n                ).then(res => {\n                    console.log('res3', res);\n                    this.setState({ projectID: res.data._id }, function() {\n                        console.log(this.state.projectID)\n                        this.setState({ showUploadFile: true }, function() {\n                            this.scrollToTop()\n                        })\n                    })\n                }).catch(err => {\n                    console.log('err3', err);\n                });\n            });\n        }\n    }\n\n    onChange = (e) => {\n        this.setState({ file: e.target.files[0] })\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault()\n        if (this.state.file) {\n            this.uploadFile(this.state.file);\n        } else {\n            this.setState({ uploadError: 'Image is required.' })\n        }\n    }\n\n    uploadFile = (file) => {\n        const formData = new FormData();\n        formData.append('sampleFile', file)\n        formData.append('businessId', this.props.url.query.path)\n        axios.post(Config.url + '/api/business/uploadphotos', formData, {\n            headers: {\n                'content-type': 'multipart/form-data',\n                'x-access-token': this.state.token\n            }\n        }).then(res => {\n            console.log(res);\n            toast(\"Business Added Successfully.!\", {\n                onClose: () => Router.push({\n                    pathname: '/business-list',\n                    //state: { detail: path }\n                })\n            });\n        }).catch(error => {\n            // return error;\n        });\n    }\n\n    scrollToTop = () => {\n        window.scrollTo({\n            top: 0,\n            behavior: 'smooth',\n        });\n    }\n\n    render() {\n      console.log(this.state.selectedSubOption);\n        return (<Layout>\n            <ToastContainer />\n            {/* <Loader /> */}\n            <div className=\"page-content\">\n                <div className=\"inner-box\">\n                    <div className=\"dashboard-box d-sm-flex align-items-center justify-content-between \">\n                        <h2 className=\"dashbord-title\">Edit business</h2>\n                        {/* <Link href=\"addBusiness\"><a data-toggle=\"modal\"  className=\"d-none d-sm-inline-block btn btn-sm btn-common shadow-sm\"><i className=\"lni-plus\" /> Create</a></Link> */}\n                    </div>\n                    <div ref={(el) => { this.uploadDiv = el; }} className=\"dashboard-wrapper\" id=\"business-list\"></div>\n                    <div className=\"col-md-12 col-sm-12 col-sx-12\">\n                        <div className=\"form-group mb-3\">\n                            <label className=\"control-label\">Business Name*</label>\n                            <input className=\"form-control input-md\" name=\"businessName\" value={this.state.businessName || ''} type=\"text\" onChange={this.handleChange} />\n                            <p style={{ color: 'red' }}>{this.state.errors.businessName || ''}</p>\n                        </div>\n                        <div className=\"form-group mb-3\">\n                            <label className=\"control-label\">Address Line 1 *</label>\n                            <input className=\"form-control input-md\" name=\"addressLine1\" value={this.state.addressLine1 || ''} type=\"text\" onChange={this.handleChange} />\n                            <p style={{ color: 'red' }}>{this.state.errors.addressLine1 || ''}</p>\n                        </div>\n                        <div className=\"form-group mb-3\">\n                            <label className=\"control-label\">Address Area *</label>\n                            <input className=\"form-control input-md\" name=\"addressArea\" value={this.state.addressArea || ''} type=\"text\" onChange={this.handleChange} />\n                            <p style={{ color: 'red' }}>{this.state.errors.addressArea || ''}</p>\n                        </div>\n                        <div className=\"form-group mb-3\">\n                            <label className=\"control-label\">Address City *</label>\n                            <input className=\"form-control input-md\" name=\"addressCity\" value={this.state.addressCity || ''} type=\"text\" onChange={this.handleChange} />\n                            <p style={{ color: 'red' }}>{this.state.errors.addressCity || ''}</p>\n                        </div>\n                        <div className=\"form-group mb-3\">\n                            <label className=\"control-label\">Address State*</label>\n                            <input className=\"form-control input-md\" name=\"addressState\" value={this.state.addressState || ''} type=\"text\" onChange={this.handleChange} />\n                            <p style={{ color: 'red' }}>{this.state.errors.addressState || ''}</p>\n                        </div>\n                        <div className=\"form-group mb-3\">\n                            <label className=\"control-label\">Pincode *</label>\n                            <input className=\"form-control input-md\" name=\"addressPincode\" value={this.state.addressPincode || ''} type=\"number\" onChange={this.handleChange} />\n                            <p style={{ color: 'red' }}>{this.state.errors.addressPincode || ''}</p>\n                        </div>\n                        <div className=\"form-group mb-3\">\n                            <label className=\"control-label\">Contact Number *</label>\n                            <input className=\"form-control input-md\" name=\"businessContactNumbers\" value={this.state.businessContactNumbers || ''} type=\"number\" onChange={this.handleChange} />\n                            <p style={{ color: 'red' }}>{this.state.errors.businessContactNumbers || ''}</p>\n                        </div>\n                        <div className=\"form-group mb-3\">\n                            <label className=\"control-label\">Select Category:</label>\n                            <Select\n                              value={(this.state.categoryArray && this.state.selectedOption) ? this.state.categoryArray.find(op => {\n                                return op.value === this.state.selectedOption.value\n                              }) : ''}\n                              onChange={this.handleCategoryChange}\n                              options={this.state.categoryArray}\n                            />\n                            <p style={{ color: 'red' }}>{this.state.errors.selectedOption || ''}</p>\n                        </div>\n                        <div className=\"form-group mb-3\">\n                            <label className=\"control-label\">Select Sub Category:</label>\n                            <Select\n                               isMulti\n                               onChange={(...args) => this.handleSubCategoryChange(...args)}\n                               options={this.state.subCategoryArray}\n                               value={this.state.selectedSubOption}\n                            />\n                            <p style={{ color: 'red' }}>{this.state.errors.selectedSubOption || ''}</p>\n                        </div>\n                        <div className=\"form-group mb-3\">\n                            <label className=\"control-label\">Business Tags*</label>\n                            <input className=\"form-control input-md\" name=\"businessTags\" value={this.state.businessTags || ''} type=\"text\" onChange={this.handleChange} />\n                            <p style={{ color: 'red' }}>{this.state.errors.businessTags || ''}</p>\n                        </div>\n\n                        <div className=\"form-group mb-3\">\n                            <label className=\"control-label\">Business Description</label>\n                            <textarea className=\"form-control\" placeholder=\"\" name=\"businessDescription\" value={this.state.businessDescription || ''} onChange={this.handleChange} rows={3} data-error=\"Write your message\" required />\n                            <p style={{ color: 'red' }}>{this.state.errors.businessDescription || ''}</p>\n                        </div>\n                        {/* <div className=\"form-group mb-3\">\n                        <label className=\"control-label\">Shop Photograph</label>\n                        <label className=\"tg-fileuploadlabel\" htmlFor=\"tg-photogallery\">\n                        <span>Drop files anywhere to upload</span>\n                        <span>Or</span>\n                        <span className=\"btn btn-common\">Select Files</span>\n                        <span>Maximum upload file size: 500 KB</span>\n                        <input id=\"tg-photogallery\" className=\"tg-fileinput\" type=\"file\" name=\"file\" />\n                        </label>\n                    </div> */}\n                        {/* {this.state.success !== '' ? <div className=\"alert alert-success\">\n                            {this.state.success}\n                        </div> : ''}\n                        {this.state.error ? <div className=\"alert alert-danger\">\n                            {this.state.error}\n                        </div> : ''} */}\n                        <button className=\"btn btn-common\" type=\"button\" onClick={this.addBusiness}>Submit</button>\n                        <button className=\"btn btn-common\" type=\"button\" onClick={this.hh}>Cancel</button>\n                    </div>\n                     <div className=\"col-md-12 col-sm-12 col-sx-12\"><div className=\"form-group mb-3\">\n                        <label className=\"control-label\">Add Image</label>\n                        <form onSubmit={this.onSubmit}>\n                            <input className=\"type_file\" type=\"file\" onChange={this.onChange} />\n                            <button className=\"btn btn-common\" type=\"submit\">Upload File</button>\n                        </form>\n                        <p style={{ color: 'red' }}>{this.state.uploadError}</p>\n                    </div></div>\n                </div>\n            </div>\n        </Layout>);\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAOA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAoBA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AArCA;AAuCA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AADA;AADA;AAKA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAGA;AAGA;AACA;AACA;AACA;AAlFA;AAqFA;AACA;AACA;AAvFA;AAwFA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1GA;AA2GA;AAAA;AAAA;AACA;AACA;AA7GA;AA8GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAjIA;AAmIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AADA;AADA;AAMA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1KA;AA4KA;AAAA;AAAA;AACA;AACA;AA9KA;AAgLA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAvLA;AAyLA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AADA;AAMA;AAEA;AACA;AACA;AA7MA;AA+MA;AACA;AACA;AAFA;AAIA;AACA;AAlNA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAFA;AAiBA;AACA;;;AAmkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AApUA;AACA;;;;;A","sourceRoot":""}