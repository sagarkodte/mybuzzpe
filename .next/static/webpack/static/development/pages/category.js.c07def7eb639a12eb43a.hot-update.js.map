{"version":3,"file":"static/webpack/static/development/pages/category.js.c07def7eb639a12eb43a.hot-update.js","sources":["webpack:///./pages/category.js"],"sourcesContent":["import React from 'react';\nimport Layout from '../Components/dashBoardLayout'\nimport axios from 'axios';\nimport serverUrl from '../config';\nimport { toast } from 'react-toastify'\nimport Link from 'next/link';\nimport Categories from '../Components/Categories'\nimport Router from 'next/router'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nimport Slider from \"react-slick\";\n\nexport default class Index extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            quesList: [],\n            modal: false,\n            modal2:false,\n            current: 0,\n            allQuestions: [],\n            checkboxValue: [],\n            message: '',\n            allResult: [],\n            newA: [],\n            categories: [],\n            categoriesUrl:''\n        };\n        this.next = this.next.bind(this);\n        this.previous = this.previous.bind(this);\n    }\n\n\n    componentDidMount = () => {\n        this.setState({categoriesUrl:this.props.url.query.path},function(){\n             this.showQuestions();\n        })\n        this.getAllresult();\n\n        this.categories();\n    }\n\n    showQuestions = (path) => {\n         console.log(this.state.categoriesUrl)\n         if(path){\n              this.setState({categoriesUrl:path})\n         }\n\n        axios.post(serverUrl.url + '/api/question/list', {\n            category: this.state.categoriesUrl,\n        })\n            .then((response) => {\n                this.toggle();\n                this.setState({ allQuestions: response.data.data })\n                console.log(this.state.allQuestions);\n            })\n            .catch((error) => {\n                //console.log(error);\n            });\n    }\n\n\n    categories = () => {\n        this.setState({ loader: true })\n        axios.get(serverUrl.url + '/api/category/main').then(res => {\n            var cata = res.data.data;\n            ////console.log(cata)\n            this.setState({ categories: cata });\n            this.setState({ loader: false })\n            //console.log(this.state.categories)\n        }).catch(error => {\n            return error;\n        });\n    }\n\n    subCategories = (item) => {\n        axios.post(serverUrl.url + '/api/category/children', {\n            category: item.path,\n        })\n            .then((response) => {\n                this.setState(prevState => ({\n                    modal2: !prevState.modal2\n                }));\n                console.log(response.data.data);\n                this.setState({ subCatename: response.data.data })\n                console.log(this.state.subCatename);\n            })\n            .catch((error) => {\n                //console.log(error);\n            });\n    }\n\n\n    toggle = () => {\n        this.setState(prevState => ({\n            modal: !prevState.modal\n        }));\n    }\n    toggle2 = () => {\n        this.setState(prevState => ({\n            modal2: !prevState.modal2\n        }));\n    }\n\n\n\n    getRadioValue(event) {\n        const { checked, value } = event.target;\n        if (checked) {\n            let a = [];\n            a.push(value);\n            this.state.checkboxValue[this.state.current] = a;\n        }\n        console.log(this.state.current, this.state.checkboxValue);\n    }\n    getCheckboxValue(event) {\n        const { checked, value } = event.target;\n        if (checked) {\n            let a = this.state.checkboxValue[this.state.current] ? this.state.checkboxValue[this.state.current] : [];\n            a.push(value);\n            this.state.checkboxValue[this.state.current] = a;\n        } else {\n            let a = this.state.checkboxValue[this.state.current];\n            delete a.splice(a.indexOf(value), 1);\n            this.state.checkboxValue[this.state.current] = a;\n        }\n        console.log(this.state.current, this.state.checkboxValue);\n    }\n    next() {\n        if (this.state.checkboxValue[this.state.current] != undefined && this.state.checkboxValue[this.state.current].length) {\n            this.slider.slickNext();\n            this.setState({ current: this.state.current + 1 });\n            this.setState({ message: '' });\n        } else {\n            this.setState({ message: 'Please select atleast one option.' });\n        }\n    }\n    previous() {\n        this.slider.slickPrev();\n        this.setState({ current: this.state.current - 1 });\n        this.setState({ message: '' });\n    }\n\n    finish = () => {\n        let newA = [];\n        this.state.checkboxValue.forEach(function(index) {\n            index.forEach(function(index1) {\n                newA.push(index1);\n            });\n        });\n        this.setState({ newA });\n        if (this.state.checkboxValue[this.state.current] != undefined && this.state.checkboxValue[this.state.current].length) {\n            this.setState({ message: '' });\n            this.getAllresult();\n        } else {\n            this.setState({ message: 'Please select atleast one option.' });\n        }\n    }\n\n    getAllresult = () => {\n        axios.post(serverUrl.url + '/api/business/search', {\n            category: this.props.url.query.path,\n            query: this.state.newA.toString()\n        })\n            .then((response) => {\n                this.setState({ allResult: response.data.data })\n                console.log(this.state.allResult)\n            })\n            .catch((error) => {\n                //console.log(error);\n            });\n    }\n\n\n    render() {\n        var settings = {\n            dots: false,\n            infinite: false,\n            speed: 500,\n            slidesToShow: 1,\n            slidesToScroll: 1,\n        };\n\n\n\n        return (\n            <Layout>\n                <div className=\"container page\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-3 col-md-12 col-xs-12 page-sidebar\">\n                            <aside>\n                                <div className=\"widget_search\">\n                                    <form role=\"search\" id=\"search-form\">\n                                        <input type=\"search\" className=\"form-control\" autoComplete=\"off\" name=\"s\" placeholder=\"Search...\" id=\"search-input\" defaultValue />\n                                        <button type=\"submit\" id=\"search-submit\" className=\"search-btn\"><i className=\"lni-search\" /></button>\n                                    </form>\n                                </div>\n                                <div className=\"widget categories\">\n                                    <h4 className=\"widget-title\">All Categories</h4>\n                                    <ul className=\"categories-list\">\n\n                                        {\n                                            this.state.categories.map((item, i) =>\n                                                <li onClick={() => this.subCategories(item)} key={i}>\n\n                                                    <h6>{item.name}</h6>\n                                                </li>\n                                            )\n                                        }\n                                        <Modal isOpen={this.state.modal2} toggle={this.toggle2} className={this.props.className} id=\"homepage_cata_modal\">\n                                            <ModalHeader>\n                                                Select Category\n                                            </ModalHeader>\n                                            <ModalBody>\n\n                                                <Catalist clk={this.showQuestions} data={this.state.subCatename} />\n                                            </ModalBody>\n                                            <ModalFooter>\n                                                <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n                                            </ModalFooter>\n                                        </Modal>\n\n                                    </ul>\n                                </div>\n                                <div className=\"widget\">\n                                    <h4 className=\"widget-title\">Advertisement</h4>\n                                    <div className=\"add-box\">\n                                        <img className=\"img-fluid\" src=\"assets/img/img1.jpg\" alt />\n                                    </div>\n                                </div>\n                            </aside>\n                        </div>\n                        <div className=\"col-lg-9 col-md-12 col-xs-12 page-content\">\n                            <div className=\"product-filter\">\n                                <div className=\"short-name\">\n                                    <span>Showing (1 - 12 products of 7371 products)</span>\n                                </div>\n                                <div className=\"Show-item\">\n                                    <span>Show Items</span>\n                                    <form className=\"woocommerce-ordering\" method=\"post\">\n                                        <label>\n                                            <select name=\"order\" className=\"orderby\">\n                                                <option selected=\"selected\" value=\"menu-order\">49 items</option>\n                                                <option value=\"popularity\">popularity</option>\n                                                <option value=\"popularity\">Average ration</option>\n                                                <option value=\"popularity\">newness</option>\n                                                <option value=\"popularity\">price</option>\n                                            </select>\n                                        </label>\n                                    </form>\n                                </div>\n\n                            </div>\n                            <div className=\"adds-wrapper\">\n                                <div className=\"tab-content\">\n                                    <div id=\"list-view\" className=\"tab-pane fade active show\">\n                                        <div className=\"row\">\n                                            {\n                                                this.state.allResult.map((item, i) =>\n                                                    <div className=\"featured-box\" >\n                                                        <figure>\n                                                            <span className=\"price-save\">\n                                                                10% Save\n                          </span>\n                                                            <div className=\"icon\">\n                                                                <span className=\"bg-green\"><i className=\"lni-heart\" /></span>\n                                                                <span><i className=\"lni-bookmark\" /></span>\n                                                            </div>\n                                                            <a href=\"#\"><img className=\"img-fluid\" src={item.uploadedPhotos[0]} /></a>\n                                                        </figure>\n                                                        <div className=\"feature-content\">\n\n                                                            <h4><a href=\"ads-details.html\">{item.businessName}</a></h4>\n                                                            <div className=\"meta-tag\">\n                                                                <span>\n                                                                    {item.addressarea} {item.addressPincode}\n                                                                </span>\n                                                            </div>\n                                                            <p className=\"dsc\">\n                                                                {item.businessTags.toString()}\n\n                                                            </p>\n                                                            <div className=\"listing-bottom\">\n                                                                <p className=\"contactNumber float-left\" >{item.businessContactNumbers}</p>\n                                                                <Link href={'business?path=' + item._id}><a className=\"btn btn-common float-right\">View Details</a></Link>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n\n                                                )\n                                            }\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"pagination-bar\">\n                                <nav>\n                                    <ul className=\"pagination justify-content-center\">\n                                        <li className=\"page-item\"><a className=\"page-link active\" href=\"#\">1</a></li>\n                                        <li className=\"page-item\"><a className=\"page-link\" href=\"#\">2</a></li>\n                                        <li className=\"page-item\"><a className=\"page-link\" href=\"#\">3</a></li>\n                                        <li className=\"page-item\"><a className=\"page-link\" href=\"#\">Next</a></li>\n                                    </ul>\n                                </nav>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <Modal isOpen={this.state.modal} toggle={this.toggle} id=\"search_result_question_modal\" className={this.props.className}>\n                    <ModalBody>\n                        <Slider\n                            swipe={false}\n                            arrows={false}\n                            ref={c => (this.slider = c)}\n                            {...settings}\n                        >\n                            {this.state.allQuestions.map((item, i) =>\n                                <div key={i}>\n                                    <h5>{item.question}</h5>\n                                    {item.options.map((opt, i) =>\n                                        <label htmlfor={opt.title} className=\"search_result_questions\" key={i}>\n                                            {item.type === 'radio' ? <span className=\"optRadio\" ><input onChange={this.getRadioValue.bind(this)} type='radio' name=\"options\" id={opt.title} value={opt.title} /></span> : <span><input className=\"checkbox\" onChange={(event) => this.getCheckboxValue(event)} type='checkbox' name='options[]' id={opt.title} value={opt.title} /></span>}<h6>{opt.title}</h6>\n                                        </label>\n                                    )}\n                                </div>\n                            )}\n                        </Slider>\n                    </ModalBody>\n                    <ModalFooter>\n                        <p>{this.state.message}</p>\n                        {this.state.current > 0 ? <Button color=\"primary\" onClick={this.previous}>Previous</Button> : ''}\n                        {this.state.current < this.state.allQuestions.length - 1 ? <Button color=\"secondary\" onClick={this.next}>Next</Button> : ''}\n                        {this.state.current == this.state.allQuestions.length - 1 ? <Button color=\"secondary\" onClick={() => { this.finish(); this.toggle() }}>Finish</Button> : ''}\n                    </ModalFooter>\n                </Modal>\n\n            </Layout>);\n    }\n}\n\nfunction Catalist(props) {\n    console.log(props)\n    const data = props.data;\n    const clk = props.clk;\n    if (data) {\n        const listItems = data.map((singlecat, index) =>\n            <li onClick={() => clk(singlecat.path)} key={index}>{singlecat.name}</li>\n        );\n        return (\n            <ul>{listItems}</ul>\n        );\n    } else {\n        return (\n            <ul>hello</ul>\n        );\n    }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAqBA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AA5BA;AA8BA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AA/CA;AAkDA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AA7DA;AA+DA;AACA;AADA;AAIA;AAAA;AACA;AADA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AA9EA;AAiFA;AAAA;AACA;AADA;AAAA;AAGA;AACA;AArFA;AAsFA;AAAA;AACA;AADA;AAAA;AAGA;AACA;AA1FA;AAmIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAjJA;AAmJA;AACA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AA7JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AAhBA;AAiBA;AACA;;;AA2EA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;;;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;;AAisvUA;AACA;AADA;AACA;AAyUA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;;;;A","sourceRoot":""}