{"version":3,"file":"static/webpack/static/development/pages/addBusiness.js.db093370a23d1d64699d.hot-update.js","sources":["webpack:///./pages/addBusiness.js"],"sourcesContent":["import React from 'react';\nimport Select from 'react-select';\nimport Layout from '../Components/twoColumnLayout'\nimport axios from 'axios';\nimport Config from '../config';\nimport Link from 'next/link';\nimport category from '../Services/categoryService';\nimport business from '../Services/businessService';\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            token: '',\n            businessName: '',\n            businessDescription: '',\n            addressLine1: '',\n            addressState: '',\n            addressArea: '',\n            addressCity: '',\n            addressPincode: '',\n            categoryType: 'Select Category Type',\n            category: 'Select Category',\n            subCategory: 'Select Sub Category',\n            businessContactNumbers: '',\n            businessTags: '',\n            categoryList: '',\n            subCategoryList: '',\n            subCategoryArray: [],\n            errors: {},\n            success: '',\n            error: '',\n            // new vars\n            categoryArray: [],\n            selectedOption: null,\n            subCategoryArray: [],\n            selectedSubOption: null,\n            businessCategory: [],\n            file: null,\n            showUploadFile: false,\n            projectID: ''\n        };\n    }\n\n    componentDidMount = () => {\n        if (localStorage.getItem('token') !== null) {\n            console.log('Data Available');\n            this.setState({ token: localStorage.getItem('token') }, function() {\n                console.log(this.state.token)\n            });\n        }\n        category.getMainCategories().then(res => {\n            let a = [];\n            res.data.forEach(function(item) {\n                a.push({ value: item.path, label: item.name });\n            });\n            this.setState({ categoryArray: a }, function() {\n                console.log(this.state.categoryArray);\n            });\n        }).catch(error => {\n            console.log('error 8', error)\n        });\n    }\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n    handleCategoryChange = selectedOption => {\n        this.setState({ selectedOption }, function() {\n            category.getSubCategories(this.state.selectedOption.value).then(res => {\n                let a = [];\n                res.data.forEach(function(item) {\n                    a.push({ value: item.path, label: item.name });\n                });\n                this.setState({ subCategoryArray: a }, function() {\n                    console.log(this.state.subCategoryArray);\n                });\n            }).catch(error => {\n                console.log('error 8', error)\n            });\n        });\n    }\n    handleSubCategoryChange = selectedOption => {\n        this.setState({ selectedSubOption: selectedOption });\n    }\n    addBusiness = () => {\n        let cat = this.state.selectedOption;\n        let subCat = this.state.selectedSubOption;\n        let businessCategory = []\n        subCat.push(cat);\n        subCat.forEach(function(item) {\n            businessCategory.push(item.value);\n        });\n        this.setState({ businessCategory: businessCategory }, function() {\n            business.addBusiness({\n                'businessName': this.state.businessName,\n                'businessDescription': this.state.businessDescription,\n                'addressLine1': this.state.addressLine1,\n                'addressArea': this.state.addressArea,\n                'addressCity': this.state.addressCity,\n                'addressState': this.state.addressState,\n                'addressPincode': this.state.addressPincode,\n                'businessContactNumbers': this.state.businessContactNumbers,\n                'businessCategory': (this.state.businessCategory).toString(),\n                'businessTags': this.state.businessTags\n            }, {\n                headers: {\n                    'x-access-token': this.state.token\n                }\n            }\n            ).then(res => {\n                console.log('res3', res);\n                this.setState({ projectID: res.data._id }, function() {\n                    console.log(this.state.projectID)\n                    this.setState({ showUploadFile: true }, function() {\n                        this.scrollToTop()\n                    })\n                })\n            }).catch(err => {\n                console.log('err3', err);\n            });\n        });\n    }\n\n    onChange = (e) => {\n        this.setState({ file: e.target.files[0] })\n    }\n\n    uploadFile = (file) => {\n        const formData = new FormData();\n        formData.append('sampleFile', file)\n        formData.append('projectId', this.state.projectID)\n        axios.post(Config.url + '/api/project/uploadfile', formData, {\n            headers: {\n                'content-type': 'multipart/form-data',\n                'x-access-token': this.state.token\n            }\n        }).then(res => {\n            console.log(res);\n        }).catch(error => {\n            // return error;\n        });\n    }\n\n    scrollToTop = () => {\n        window.scrollTo({\n            top: 0,\n            behavior: 'smooth',\n        });\n    }\n\n    render() {\n        return (<Layout>\n            <div className=\"page-content\">\n                <div className=\"inner-box\">\n                    <div className=\"dashboard-box d-sm-flex align-items-center justify-content-between \">\n                        <h2 className=\"dashbord-title\">Add new business</h2>\n                        {/* <Link href=\"addBusiness\"><a data-toggle=\"modal\"  className=\"d-none d-sm-inline-block btn btn-sm btn-common shadow-sm\"><i className=\"lni-plus\" /> Create</a></Link> */}\n                    </div>\n                    <div ref={(el) => { this.uploadDiv = el; }} class=\"dashboard-wrapper\" id=\"shopDetails\"></div>\n                    {this.state.showUploadFile ? '' : <div className=\"col-md-12 col-sm-12 col-sx-12\">\n                        <div className=\"form-group mb-3\">\n                            <label className=\"control-label\">Business Name*</label>\n                            <input className=\"form-control input-md\" name=\"businessName\" value={this.state.businessName} type=\"text\" onChange={this.handleChange} />\n                            <p><font color=\"red\">{this.state.errors.businessName}</font></p>\n                        </div>\n                        <div className=\"form-group mb-3\">\n                            <label className=\"control-label\">Address Line 1 *</label>\n                            <input className=\"form-control input-md\" name=\"addressLine1\" value={this.state.addressLine1} type=\"text\" onChange={this.handleChange} />\n                            <p><font color=\"red\">{this.state.errors.addressLine1}</font></p>\n                        </div>\n                        <div className=\"form-group mb-3\">\n                            <label className=\"control-label\">Address Area *</label>\n                            <input className=\"form-control input-md\" name=\"addressArea\" value={this.state.addressArea} type=\"text\" onChange={this.handleChange} />\n                            <p><font color=\"red\">{this.state.errors.addressArea}</font></p>\n                        </div>\n                        <div className=\"form-group mb-3\">\n                            <label className=\"control-label\">Address City *</label>\n                            <input className=\"form-control input-md\" name=\"addressCity\" value={this.state.addressCity} type=\"text\" onChange={this.handleChange} />\n                            <p><font color=\"red\">{this.state.errors.addressCity}</font></p>\n                        </div>\n                        <div className=\"form-group mb-3\">\n                            <label className=\"control-label\">Address State*</label>\n                            <input className=\"form-control input-md\" name=\"addressState\" value={this.state.addressState} type=\"text\" onChange={this.handleChange} />\n                            <p><font color=\"red\">{this.state.errors.addressState}</font></p>\n                        </div>\n                        <div className=\"form-group mb-3\">\n                            <label className=\"control-label\">Pincode *</label>\n                            <input className=\"form-control input-md\" name=\"addressPincode\" value={this.state.addressPincode} type=\"text\" onChange={this.handleChange} />\n                            <p><font color=\"red\">{this.state.errors.addressPincode}</font></p>\n                        </div>\n                        <div className=\"form-group mb-3\">\n                            <label className=\"control-label\">Contact Number *</label>\n                            <input className=\"form-control input-md\" name=\"businessContactNumbers\" value={this.state.businessContactNumbers} type=\"text\" onChange={this.handleChange} />\n                            <p><font color=\"red\">{this.state.errors.businessContactNumbers}</font></p>\n                        </div>\n                        <div className=\"form-group mb-3\">\n                            <label className=\"control-label\">Select Category:</label>\n                            <Select onChange={this.handleCategoryChange} options={this.state.categoryArray} />\n                        </div>\n                        <div className=\"form-group mb-3\">\n                            <label className=\"control-label\">Select Sub Category:</label>\n                            <Select value={this.state.selectedSubOption} isMulti onChange={(...args) => this.handleSubCategoryChange(...args)} options={this.state.subCategoryArray} />\n                        </div>\n                        <div className=\"form-group mb-3\">\n                            <label className=\"control-label\">Business Tags*</label>\n                            <input className=\"form-control input-md\" name=\"businessTags\" value={this.state.businessTags} type=\"text\" onChange={this.handleChange} />\n                            <p><font color=\"red\">{this.state.errors.businessTags}</font></p>\n                        </div>\n\n                        <div className=\"form-group mb-3\">\n                            <label className=\"control-label\">Business Description</label>\n                            <textarea className=\"form-control\" placeholder=\"\" name=\"businessDescription\" value={this.state.businessDescription} onChange={this.handleChange} rows={3} data-error=\"Write your message\" required />\n                            <p><font color=\"red\">{this.state.errors.businessDescription}</font></p>\n                        </div>\n                        {/* <div className=\"form-group mb-3\">\n                        <label className=\"control-label\">Shop Photograph</label>\n                        <label className=\"tg-fileuploadlabel\" htmlFor=\"tg-photogallery\">\n                        <span>Drop files anywhere to upload</span>\n                        <span>Or</span>\n                        <span className=\"btn btn-common\">Select Files</span>\n                        <span>Maximum upload file size: 500 KB</span>\n                        <input id=\"tg-photogallery\" className=\"tg-fileinput\" type=\"file\" name=\"file\" />\n                        </label>\n                    </div> */}\n                        {this.state.success !== '' ? <div className=\"alert alert-success\">\n                            {this.state.success}\n                        </div> : ''}\n                        {this.state.error ? <div className=\"alert alert-danger\">\n                            {this.state.error}\n                        </div> : ''}\n                        <button className=\"btn btn-common\" type=\"button\" onClick={this.addBusiness}>Submit</button>\n                        <button className=\"btn btn-common\" type=\"button\" onClick={this.onCanel}>Cancel</button>\n                    </div>}\n                    {!this.state.showUploadFile ? <div className=\"col-md-12 col-sm-12 col-sx-12\"><div className=\"form-group mb-3\">\n                        <label className=\"control-label\">Add Image</label>\n                        <form onSubmit={this.onSubmit}>\n                            <input className=\"type_file\" type=\"file\" onChange={this.onChange} />\n                            <button className=\"btn btn-common\" type=\"submit\">Upload File</button>\n                        </form>\n                    </div></div> : ''}\n                </div>\n            </div>\n        </Layout>);\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAEA;AAAA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAmCA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArDA;AAsDA;AACA;AACA;AAxDA;AAyDA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvEA;AAwEA;AAAA;AAAA;AACA;AACA;AA1EA;AA2EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AADA;AADA;AAMA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhHA;AAkHA;AAAA;AAAA;AACA;AACA;AApHA;AAsHA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AAEA;AACA;AACA;AApIA;AAsIA;AACA;AACA;AAFA;AAIA;AACA;AAzIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBA;AAFA;AAgsourceRoot":""}