{"version":3,"file":"static/webpack/static/development/pages/category.js.4edbdf12cec1a572c964.hot-update.js","sources":["webpack:///./pages/login.js"],"sourcesContent":["import React from 'react';\nimport Layout from '../Components/dashBoardLayout'\nimport axios from 'axios';\nimport Config from '../config';\nimport forgotPassword from '../pages/forgotPassword';\nimport Link from 'next/link'\nimport Loader from '../Components/Loader'\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: '',\n            password: '',\n            loginError: '',\n            loginSuccess: '',\n            loader: false\n        };\n    }\n\n    componentDidMount = () => {\n        console.log('props :', this.props);\n        let token = localStorage.getItem('token');\n        console.log(token);\n        this.setState({loader:true})\n        if (token) {\n            console.log('redirect :', this.props);\n            this.props.url.push('/');\n        }\n    }\n\n    login = () => {\n        this.setState({ loader: true })\n        if (this.state.user !== '' && this.state.password !== '') {\n            var userData = {\n                \"user\": this.state.user,\n                \"password\": this.state.password\n            }\n            axios.post(Config.url + '/api/user/login', userData, {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }).then(res => {\n\n                console.log('login :', res.data.user);\n                console.log('login :', res.data.user.isValidEmail);\n                //if(res.data.user.isValidEmail){\n                localStorage.setItem('user', JSON.stringify(res.data.user));\n                localStorage.setItem('token', res.data.token);\n                this.setState({ loginSuccess: 'Successfully logged In' });\n\n                this.props.url.push('/')\n                this.setState({ loginSuccess: '' });\n\n                // }else{\n                //   this.setState({loginError:'Email is not activated'});\n                // }\n            }).catch(error => {\n                console.log('login error :', error.response.data.message);\n                this.setState({ loginError: error.response.data.message });\n                //return error;\n            });\n        } else {\n            this.setState({ loginError: 'Please enter the fields' })\n        }\n    }\n\n    validateForm = () => {\n        let errors = {};\n        let formIsValid = true;\n\n        if (!this.state.user) {\n            formIsValid = false;\n            errors[\"user\"] = \"*Please enter your email or mobile no.\";\n        }\n\n        if (typeof this.state.user !== \"undefined\") {\n            //regular expression for email validation\n            var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n            if (!pattern.test(this.state.user)) {\n                formIsValid = false;\n                errors[\"user\"] = \"*Please enter valid email.\";\n            }\n        }\n\n        if (typeof this.state.user !== \"undefined\") {\n            if (!this.state.user.match(/^[0-9]{10}$/)) {\n                formIsValid = false;\n                errors[\"user\"] = \"*Please enter valid 10 digit mobile no.\";\n            }\n        }\n\n        if (!this.state.password) {\n            formIsValid = false;\n            errors[\"password\"] = \"*Please enter your password.\";\n        }\n\n        if (typeof this.state.password !== \"undefined\") {\n            if (!this.state.password.match(/^.*(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%&]).*$/)) {\n                formIsValid = false;\n                errors[\"password\"] = \"*Please enter .\";\n            }\n        }\n\n        this.setState({\n            errors: errors\n        });\n        return formIsValid;\n    }\n\n\n    handleChange = (e) => {\n        let eventName = e.target.name;\n        switch (eventName) {\n            case 'user':\n                console.log('user :', eventName, e.target.value);\n                this.setState({ user: e.target.value, loginError: '' });\n                break;\n            case 'password':\n                console.log('pass :', eventName, e.target.value);\n                this.setState({ password: e.target.value, loginError: '' });\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        return (<Layout>\n            <section className=\"login mt-4\">\n                <div className=\"container\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-lg-5 col-md-12 col-xs-12\">\n                            <div className=\"login-form login-area\">\n                                <h3>\n                                    Login Here\n                </h3>\n                                {this.state.loader?<Loader />:\n                                <div role=\"form\" className=\"login-form\" id=\"loginForm\" noValidate=\"novalidate\">\n                                    <div className=\"form-group\">\n                                        <div className=\"input-icon\">\n                                            <i className=\"lni-user\" />\n                                            <input type=\"text\" id=\"sender-email\" className=\"form-control\" name=\"user\" placeholder=\"Email Id / Mobile No.\" value={this.state.user} onChange={this.handleChange} />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <div className=\"input-icon\">\n                                            <i className=\"lni-lock\" />\n                                            <input type=\"password\" className=\"form-control\" placeholder=\"Password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group mb-3\">\n                                        {/* <div className=\"custom-control custom-checkbox\">\n                      <input type=\"checkbox\" className=\"custom-control-input\" id=\"checkedall\" />\n                      <label className=\"custom-control-label\" htmlFor=\"checkedall\">Keep me logged in</label>\n                    </div> */}\n                                        <Link href=\"/forgotPassword\"><a className=\"forgetpassword\" >Forgot Password?</a></Link>\n                                    </div>\n                                    <div className=\"\">\n                                        {this.state.loginSuccess !== '' ? <div className=\"alert alert-success\">\n                                            {this.state.loginSuccess}\n                                        </div> : ''}\n                                        {this.state.loginError ? <div className=\"alert alert-danger\">\n                                            {this.state.loginError}\n                                        </div> : ''}\n                                        <button className=\"btn btn-common log-btn\" onClick={this.login}>Submit</button>\n\n                                    </div>\n                                </div>}\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </Layout>);\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAYA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AArBA;AAuBA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AADA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAzDA;AA2DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AApGA;AAuGA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAVA;AAYA;AACA;AAnHA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AASA;AACA;;;AA4GA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;;;;AAxKA;AACA;;;;;A","sourceRoot":""}